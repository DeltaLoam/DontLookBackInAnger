using UnityEngine;
using UnityEngine.UI;

public class JumpscareTrigger : MonoBehaviour
{
    [Header("Trigger Settings")]
    [Tooltip("‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ jumpscare ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ")]
    public float triggerRadius = 5f;
    [Tooltip("‡∏à‡∏∞‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î jumpscare ‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡πÑ‡∏´‡∏°‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å")]
    public bool oneTimeOnly = true;

    [Header("Scare Image")]
    [Tooltip("UI Image ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û jumpscare")]
    public Image scareImage;
    [Tooltip("‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô jumpscare")]
    public Sprite scareSprite;
    [Tooltip("‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏†‡∏≤‡∏û‡∏à‡∏∞‡πÇ‡∏ä‡∏ß‡πå")]
    public float scareDuration = 2.5f;

    [Header("Scare Sound")]
    public AudioClip scareSound;

    [Header("Optional FX")]
    public ParticleSystem fxEffect;
    public Light flickerLight;

    private bool hasTriggered = false;
    private AudioSource audioSource;
    private Transform player;

    void Start()
    {
        audioSource = GetComponent<AudioSource>();
        if (audioSource == null)
        {
            audioSource = gameObject.AddComponent<AudioSource>();
            audioSource.spatialBlend = 0f; // ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô 2D (‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏≤‡∏Å‡∏à‡∏≠)
        }

        if (scareImage != null)
            scareImage.enabled = false;

        player = GameObject.FindGameObjectWithTag("Player")?.transform;
    }

    void Update()
    {
        if (hasTriggered && oneTimeOnly) return;
        if (player == null) return;

        float distance = Vector3.Distance(transform.position, player.position);
        if (distance <= triggerRadius)
        {
            TriggerScare();
        }
    }

    void TriggerScare()
    {
        hasTriggered = true;

        // üîπ ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û jumpscare
        if (scareImage != null && scareSprite != null)
        {
            scareImage.sprite = scareSprite;
            scareImage.enabled = true;
        }

        // üîä ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á
        if (scareSound != null)
            audioSource.PlayOneShot(scareSound);

        // ‚ú® ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏™‡∏£‡∏¥‡∏°
        if (fxEffect != null)
            fxEffect.Play();

        if (flickerLight != null)
            StartCoroutine(FlickerLight());

        // üîª ‡∏õ‡∏¥‡∏î‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏£‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
        Invoke(nameof(EndScare), scareDuration);
    }

    void EndScare()
    {
        if (scareImage != null)
            scareImage.enabled = false;
    }

    System.Collections.IEnumerator FlickerLight()
    {
        float endTime = Time.time + scareDuration;
        while (Time.time < endTime)
        {
            flickerLight.enabled = !flickerLight.enabled;
            yield return new WaitForSeconds(Random.Range(0.05f, 0.2f));
        }
        flickerLight.enabled = true;
    }

    void OnDrawGizmosSelected()
    {
        Gizmos.color = Color.red;
        Gizmos.DrawWireSphere(transform.position, triggerRadius);
    }
}
